webpage Vroomitor
    author: "Giannis Gkountras"
    version: "1.0"
    description: "A live dashboard"
    navbar: true

    API publisherAPI
        host: "0.0.0.0"
        port: 8321
    end

    Broker<MQTT> HomeBroker
        host: "192.168.1.6"
        port: 1883
    end

    Broker<Redis> LabRedis
        host: "192.168.1.6"
        port: 6379
    end

    Websocket HomeWebsocket
        host: "192.168.1.6"
        port: 8080
    end

    RESTApi todosAPI
        host: "https://jsonplaceholder.typicode.com"
        headers: {"Content-Type": "application/json"}
    end

    RESTApi echoAPI
        host: "https://httpbin.org/anything"
        headers: {"Content-Type": "application/json"}
    end

    // ——— define specific endpoints/topics/queries ———

    RESTEndpoint todosEndpoint
        connection: todosAPI
        path: "/todos/1"
    end

    RESTEndpoint allTodosEndpoint
        connection: todosAPI
        path: "/todos"
    end

    RESTEndpoint echoEndpoint
        connection: echoAPI
        path: "/anything"
    end

    BrokerTopic cpuTopic
        connection: HomeBroker
        topic: "cpu"
    end

    BrokerTopic carinfoTopic
        connection: HomeBroker
        topic: "carinfo"
    end

    BrokerTopic allLogsTopic
        connection: LabRedis
        topic: "alllogs"
    end

    Database<MySQL> HomeSQL
        host: "192.168.1.6"
        port: 3306
        auth:
            username: "thesis"
            password: "password"
        database: "thesis"
    end

    MySQLQuery mysqlUsersQuery
        connection: HomeSQL
        query: "SELECT * FROM users"
    end

    // ——— now each Entity picks exactly one “EntitySource” ———

    Entity todos
        source: todosEndpoint
        attributes:
            - userId: int
            - title: str
    end

    Entity allTodos
        source: allTodosEndpoint
        attributes:
            - userId: int
            - title: str
            - completed: bool
    end

    Entity cpuMetrics
        source: cpuTopic
        attributes:
            - timestamp: int
            - jetson: float
            - rpi: float
            - laptop: float
    end

    Entity carInformation
        source: carinfoTopic
        attributes:
            - rpi: float
            - frame: str
            - speed: float
            - state: str
    end

    Entity allLogsRedis
        source: allLogsTopic
        attributes:
            - error: str
            - info: str
            - warning: str
    end

    Entity mysqlUsers
        source: mysqlUsersQuery
        attributes:
            - id: int
            - name: str
    end

    // ——— Components & Screens remain the same, just point at the Entities above ———

    Component title
        entity: todos
        type: Text
            content: title
            size: 50
            color: "#00BDFE"
    end

    Component JetsonGaugeCPU
        entity: cpuMetrics
        type: Gauge
            value: jetson
    end

    Component RPIGaugeCPU
        entity: cpuMetrics
        type: Gauge
            value: rpi
    end

    Component ErrorNotification
        entity: allLogsRedis
        type: Notification
            type: error
            message: error
    end

    Component Camera
        entity: carInformation
        type: Image
            width: 450
            height: 300
            source: frame
    end

    Component CPUChart
        entity: cpuMetrics
        type: LineChart
            xLabel: "Time"
            yLabel: "CPU Usage"
            xValue: timestamp
            yValues: jetson, rpi
    end

    Component RedisJsonViewer
        entity: allLogsRedis
        type: JsonViewer
    end

    Screen Dashboard
        title: "Dashboard"
        url: "/"

        use ErrorNotification

        row
            col
                row
                    use JetsonGaugeCPU
                endrow
                row
                   use RPIGaugeCPU
                endrow
            endcol
            col
                Component cpuLogs
                    entity: cpuMetrics
                    type: Logs
                        attributes: jetson, rpi, laptop
                end
            endcol
            col
                use Camera
            endcol
            col
                use CPUChart
            endcol
        endrow

        row
            col
                Component MQTTPublisher
                    type: Publish
                        broker: HomeBroker
                end
            endcol
            col
                Component RedisPublisher
                    type: Publish
                        broker: LabRedis
                end
            endcol
            col
                row
                    use RedisJsonViewer
                endrow
                row
                    Component cpuAlive
                        entity: cpuMetrics
                        type: Alive
                            timeout: 5000
                    end
                endrow
                row
                    Component autoPublish
                        type: Publish
                            broker: HomeBroker
                            topic: "test"
                            json: "{\"signal\":\"stop_car\"}"
                    end
                endrow
            endcol
            col
                Component myLiveTable
                    entity: cpuMetrics
                    type: LiveTable
                        columns: jetson, rpi, laptop
                end
            endcol
        endrow
    end

    Screen RestScreen
        title: "Rest Screen"
        url: "/rest"

        row
            col
                Component RestGauge
                    entity: todos
                    type: Gauge
                        value: userId
                end
            endcol
            col
                Component RestJsonViewer
                    entity: todos
                    type: JsonViewer
                end
            endcol
            col
                Component restPublish
                    type: Publish
                        endpoint: echoEndpoint
                end
            endcol
            col
                row
                    Component restPublishWithJson
                        type: Publish
                            endpoint: echoEndpoint
                            json: "{\"signal\":\"stop_car\"}"
                    end
                endrow
                row
                    use title
                endrow
            endcol
        endrow

        row
            col
                Component restImage
                    entity: todos
                    type: Image
                        source: title
                end
            endcol
            col
                Component restCrudTable
                    entity: allTodos
                    type: CrudTable
                end
            endcol
        endrow
    end

    Screen DBScreen
        title: "Database screen"
        url: "/db"

        row
            col
                Component DBGauge
                    entity: mysqlUsers
                    type: Gauge
                        value: id
                end
            endcol
            col
                row
                    Component DBText
                        entity: mysqlUsers
                        type: Text
                            content: name
                            size: 30
                    end
                endrow
                row
                    Component dbJsonFirstUser
                        entity: mysqlUsers
                        type: JsonViewer
                            attributes: id, name
                    end
                endrow
            endcol
            col
                Component dbJson
                    entity: mysqlUsers
                    type: JsonViewer
                end
            endcol
        endrow
        row
            col
            endcol
            col
                Component dbTable
                    entity: mysqlUsers
                    type: CrudTable
                end
            endcol
            col
            endcol
        endrow
    end

    Screen StaticScreen
        title: "Static screen"
        url: "/static"

        row
            col
                Component staticText
                    type: Text
                        content: "Hello world test"
                        size: 20
                end
            endcol
            col
                Component staticImg
                    type: Image
                        source: "https://www.elementaryos-fr.org/wp-content/uploads/2013/09/wallpaper-2692643.jpg"
                end
            endcol
            col
                Component staticGauge
                    type: Gauge
                        value: 83.2
                end
            endcol
        endrow
        row
            col
                Component staticChart
                    type: LineChart
                        xLabel: "Age"
                        yLabel: "Students"
                        xValue: "age"
                        yValues: "student_number", "mean_grade"
                        staticData: [
                            {"age":20, "student_number":50, "mean_grade":8.1},
                            {"age":21, "student_number":24, "mean_grade":6.8},
                            {"age":23, "student_number":80, "mean_grade":7.3}
                        ]
                end
            endcol
        endrow
    end
