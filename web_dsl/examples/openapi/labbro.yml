openapi: 3.0.0
info:
    title: LabBro API
    version: 1.0.0
    description: API for handling all LabBro needs.
servers:
    - url: "http://localhost:8000/api"
paths:
    /token/:
        post:
            summary: Obtain JWT token
            tags:
                - Authentication
            description: Returns a JWT token for authenticated users.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                    example: user@example.com
                                password:
                                    type: string
                                    example: securepassword123
            responses:
                "200":
                    description: Token retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    access:
                                        type: string
                                        example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsInR...
                                    refresh:
                                        type: string
                                        example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsInR...
                "400":
                    description: Bad request
                "401":
                    description: Unauthorized
    /token/refresh/:
        post:
            summary: Refresh JWT token
            tags:
                - Authentication
            description: Returns a new JWT token using a refresh token.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                refresh:
                                    type: string
                                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsInR...
            responses:
                "200":
                    description: Token refreshed successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    access:
                                        type: string
                                        example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsInR...
                "400":
                    description: Bad request
                "401":
                    description: Unauthorized
    /register/:
        post:
            summary: Register a new user
            tags:
                - Authentication
            description: Creates a new user account and returns the user details.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                    example: newuser@example.com
                                password:
                                    type: string
                                    example: securepassword123
                                first_name:
                                    type: string
                                    example: John
                                last_name:
                                    type: string
                                    example: Doe
            responses:
                "201":
                    description: User registered successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: integer
                                        example: 1
                                    username:
                                        type: string
                                        example: newuser@example.com
                                    first_name:
                                        type: string
                                        example: John
                                    last_name:
                                        type: string
                                        example: Doe
                "400":
                    description: Bad request
                "409":
                    description: "Conflict (e.g., username already exists)"
    /logout/:
        post:
            summary: Logout user
            tags:
                - Authentication
            description: Logs out the user by blacklisting the refresh token.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                refresh:
                                    type: string
                                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsInR...
            responses:
                "200":
                    description: User logged out successfully
                "400":
                    description: Bad request
    /users/:
        get:
            summary: Get list of users
            tags:
                - User
            responses:
                "200":
                    description: List of users
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/CustomUser"
    "/users/{id}/":
        get:
            summary: Get a single user by ID
            tags:
                - User
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                "200":
                    description: A single user
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CustomUser"
                "404":
                    description: User not found
    /discord-id/:
        get:
            summary: Get a all users discord ids (FOR IS STAFF USERS ONLY)
            tags:
                - User
            responses:
                "200":
                    description: An array of user ids with discord ids
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CustomUser"
                "404":
                    description: User not found
    /update-profile-picture/:
        put:
            summary: Update user profile picture
            tags:
                - User
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                image:
                                    type: string
                                    format: binary
            responses:
                "200":
                    description: Profile picture updated successfully
                "400":
                    description: Bad request
                "404":
                    description: User not found
    /checkout/:
        post:
            tags:
                - LabSession
            summary: Checkout from a lab session
            description: Allows authenticated users to check out of an active lab session.
            operationId: labSessionCheckout
            responses:
                "200":
                    description: Checkout successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    detail:
                                        type: string
                                        example: User has checked out.
                "400":
                    description: User is not checked in or invalid input
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    detail:
                                        type: string
                                        example: User is not checked in.
                "401":
                    description: Unauthorized - authentication required
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    detail:
                                        type: string
                                        example: Authentication credentials were not provided.
    /labsessions/:
        get:
            summary: Get list of lab sessions
            tags:
                - LabSession
            responses:
                "200":
                    description: List of lab sessions
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/LabSession"
        post:
            summary: Create a new lab session
            tags:
                - LabSession
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/LabSession"
            responses:
                "201":
                    description: Created lab session
    "/labsessions/user/{id}/":
        get:
            summary: Get lab session entries for a specific user
            tags:
                - LabSession
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                "200":
                    description: List of lab sessions for the specified user
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/LabSession"
                "404":
                    description: User not found
    /labsessions/latest/:
        get:
            summary: Get the latest lab session entry for each user
            tags:
                - LabSession
            responses:
                "200":
                    description: List of latest lab session entries for each user
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/LabSession"
    /labsessions/recent/:
        get:
            summary: Get the latest 8 lab session entries
            tags:
                - LabSession
            responses:
                "200":
                    description: List of the 8 latest lab session entries
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/LabSession"
    /vroomvolts/:
        get:
            summary: Get list of vroomvolts entries
            tags:
                - Vroomvolts
            parameters:
                - name: user
                  in: query
                  description: Filter vroomvolts by user ID
                  required: false
                  schema:
                      type: integer
            responses:
                "200":
                    description: List of vroomvolts
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Vroomvolts"
        post:
            summary: Create a new vroomvolts record
            tags:
                - Vroomvolts
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                value:
                                    type: integer
                                    default: 0
                                    nullable: true
                            required:
                                - value
            responses:
                "201":
                    description: Created vroomvolts record
    /vroomvolts/latest/:
        get:
            summary: Get the latest vroomvolts entry for all users
            tags:
                - Vroomvolts
            responses:
                "200":
                    description: Latest vroomvolts entry
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Vroomvolts"
    /vroomvolts/recent/:
        get:
            summary: Retrieve the 8 most recent Vroomvolts entries
            tags:
                - Vroomvolts
            description: >-
                This endpoint returns the most recent Vroomvolts entries along with the
                gain or loss information for each user.
            responses:
                "200":
                    description: A list of recent Vroomvolts entries with gain/loss information.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        user_id:
                                            type: integer
                                            description: The ID of the user associated with the entry.
                                            example: 1
                                        value:
                                            type: integer
                                            description: The current value of Vroomvolts.
                                            example: 500
                                        gain:
                                            type: boolean
                                            description: >-
                                                Indicates if the user has gained (true) or lost (false)
                                                Vroomvolts.
                                            example: true
                "404":
                    description: No recent entries found.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    detail:
                                        type: string
                                        example: No recent Vroomvolts entries found.
                "500":
                    description: Internal Server Error.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    detail:
                                        type: string
                                        example: An error occurred while processing your request.
    "/vroomvolts/user/{id}/":
        get:
            summary: Get vroomvolts entries for a specific user
            tags:
                - Vroomvolts
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                "200":
                    description: List of vroomvolts for the specified user
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Vroomvolts"
                "404":
                    description: User not found
    /rfids/:
        get:
            summary: Get list of new RFID entries
            tags:
                - NewRFID
            responses:
                "200":
                    description: List of RFID entries
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/NewRFID"
        post:
            summary: Create a new RFID entry
            tags:
                - NewRFID
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/NewRFID"
            responses:
                "201":
                    description: Created RFID entry
    /labstatus/:
        get:
            summary: Get all lab status entries
            tags:
                - LabStatus
            responses:
                "200":
                    description: List of lab status entries
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/LabStatus"
    /labstatus/latest/:
        get:
            summary: Get the latest lab status entry
            tags:
                - LabStatus
            responses:
                "200":
                    description: The latest lab status entry
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/LabStatus"
                "404":
                    description: No LabStatus entries found
    /labstatus/durations/:
        get:
            summary: Get total duration entries of "lab is open"
            tags:
                - LabStatus
            responses:
                "200":
                    description: List of "lab is open" session durations
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        duration:
                                            type: string
                                            description: Duration of the "lab is open" session
    /labstatus/durations/total/:
        get:
            summary: Get total duration between true and false statuses
            tags:
                - LabStatus
            description: >-
                Returns the total duration between all status changes from true to
                false.
            responses:
                "200":
                    description: Successfully retrieved total duration
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    total_duration:
                                        type: number
                                        example: 7200
                "401":
                    description: Unauthorized
    /devices/:
        get:
            summary: Get list of devices
            tags:
                - Device
            responses:
                "200":
                    description: List of devices
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Device"
        post:
            summary: Create a new device
            tags:
                - Device
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Device"
            responses:
                "201":
                    description: Created device
    "/devices/{id}/":
        get:
            summary: Get a single device by ID
            tags:
                - Device
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                "200":
                    description: A single device
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Device"
                "404":
                    description: Device not found
        put:
            summary: Update a device by ID
            tags:
                - Device
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Device"
            responses:
                "200":
                    description: Updated device
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Device"
                "404":
                    description: Device not found
        delete:
            summary: Delete a device by ID
            tags:
                - Device
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                "204":
                    description: Device deleted successfully
                "404":
                    description: Device not found
    /devicemetrics/:
        get:
            summary: Get list of device metrics
            tags:
                - DeviceMetrics
            parameters:
                - name: device
                  in: query
                  description: Filter device metrics by device ID
                  required: false
                  schema:
                      type: integer
            responses:
                "200":
                    description: List of device metrics
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/DeviceMetrics"
        post:
            summary: Create a new device metric
            tags:
                - DeviceMetrics
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DeviceMetrics"
            responses:
                "201":
                    description: Created device metric
    /spin/:
        post:
            summary: Spin the Lucky Wheel
            description: >-
                Spin the Lucky Wheel to win or lose Vroomvolts based on the random
                position and prize.
            tags:
                - Games
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            type: object
            responses:
                "200":
                    description: Spin successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    position:
                                        type: number
                                        description: The final position of the wheel (in degrees).
                                    prize:
                                        type: string
                                        description: Prize awarded from the spin (can be positive or negative).
                                    vroomvolts:
                                        type: number
                                        description: The user's updated Vroomvolts balance.
                "400":
                    description: "Bad request (e.g., not enough Vroomvolts)."
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                "401":
                    description: Unauthorized request.
                "500":
                    description: Internal server error.
    /blackjack/:
        post:
            summary: Play a game of Blackjack
            description: >-
                Start or continue a game of Blackjack by placing a bet and optionally
                hitting for more cards.
            tags:
                - Games
            requestBody:
                required: true
                content: null
                application/json:
                    schema: null
                    type: object
                    properties:
                        bet: null
                        type: integer
                        description: The amount of Vroomvolts to bet.
                        example: 10
                        hit:
                            type: boolean
                            description: Indicates if the player chooses to hit (draw another card).
            responses:
                "200":
                    description: "Game response, including updated hand and result."
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    userHand:
                                        type: array
                                        items:
                                            type: string
                                            description: The player's cards.
                                    manaHand:
                                        type: array
                                        items:
                                            type: string
                                            description: >-
                                                The dealer's cards (only the first one visible
                                                initially).
                                            wonVroomvolts:
                                                type: integer
                                                description: Amount of Vroomvolts won or 0 if lost.
                                            message:
                                                type: string
                                                description: >-
                                                    Additional game state messages (e.g., 'User busts,
                                                    Dealer wins.').
                "400":
                    description: "Bad request (e.g., invalid bet, not enough Vroomvolts)."
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                "401":
                    description: Unauthorized request.
                "500":
                    description: Internal server error.
    /rouleta/:
        post:
            summary: Play Roulette
            description: Place bets and spin the Roulette wheel to win based on the outcome.
            tags:
                - Games
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                bets:
                                    type: array
                                    items:
                                        type: object
                                        properties:
                                            bet:
                                                type: string
                                                description: The type of bet being placed.
                                            amount:
                                                type: integer
                                                description: Amount of Vroomvolts being wagered for this bet.
            responses:
                "200":
                    description: "Roulette spin result, including winnings and new Vroomvolts balance."
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    choice:
                                        type: integer
                                        description: The number on which the roulette wheel landed.
                                    winningNumber:
                                        type: string
                                        description: "The outcome of the spin (e.g., '0', '00', or a number)."
                                    vroomvoltsWon:
                                        type: integer
                                        description: The total Vroomvolts won from the spin.
                                    totalBet:
                                        type: integer
                                        description: The total amount of Vroomvolts wagered.
                "400":
                    description: "Bad request (e.g., not enough Vroomvolts, invalid bets)."
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                "401":
                    description: Unauthorized request.
                "500":
                    description: Internal server error.
components:
    schemas:
        CustomUser:
            type: object
            properties:
                username:
                    type: string
                rfid_uid:
                    type: string
                    nullable: true
                discord_id:
                    type: string
                    nullable: true
                total_time:
                    type: integer
                    default: 0
                    nullable: true
                has_key:
                    type: boolean
                    default: false
                    nullable: true
        LabSession:
            type: object
            properties:
                user:
                    $ref: "#/components/schemas/CustomUser"
                timestamp:
                    type: string
                    format: date-time
                status:
                    type: boolean
                    default: false
                    nullable: true
        Vroomvolts:
            type: object
            properties:
                user:
                    $ref: "#/components/schemas/CustomUser"
                last_updated:
                    type: string
                    format: date-time
                value:
                    type: integer
                    default: 0
                    nullable: true
        NewRFID:
            type: object
            properties:
                rfid_uid:
                    type: string
                timestamp:
                    type: string
                    format: date-time
                    nullable: true
        LabStatus:
            type: object
            properties:
                status:
                    type: boolean
                    default: false
                    nullable: true
                currentMembers:
                    type: array
                    items:
                        type: string
                    nullable: true
                last_updated:
                    type: string
                    format: date-time
                    nullable: true
        Device:
            type: object
            properties:
                name:
                    type: string
        DeviceMetrics:
            type: object
            properties:
                device:
                    $ref: "#/components/schemas/Device"
                timestamp:
                    type: string
                    format: date-time
                value:
                    type: number
                    format: float
                    default: 0
                    nullable: true
                status:
                    type: boolean
                    default: false
                    nullable: true
