Webpage ConditionsTest
    author: "Giannis Gkountras"
    version: "1.0"
    description: "Conditions Test"
    navbar: Home

    //============ Connections =============//
    
    API backendAPI
        host: "0.0.0.0"
        port: 8321
    end

    Websocket backendWebsocket
        host: "192.168.1.6"
        port: 8080
    end

    Broker<MQTT> DataBroker
        host: "192.168.1.6"
        port: 1883
    end

    RESTApi OpenMeteo
        host: "https://api.open-meteo.com"
        headers: {"Content-Type": "application/json"}
    end

    //============ Specific endpoints / topics / queries =============//

    BrokerTopic dataTopic
        connection: DataBroker
        topic: "data"
    end

    RESTEndpoint WeatherEnpoint
        connection: OpenMeteo
        path: "/v1/forecast?latitude=40.6436&longitude=22.9309&current=temperature_2m,relative_humidity_2m,is_day,weather_code&hourly=temperature_2m,relative_humidity_2m,weather_code,is_day&daily=weather_code,temperature_2m_max,temperature_2m_min&timezone=auto&forecast_hours=24&models=best_match"
    end



    // ============= Entities =============== //

    Entity DataFromBroker
        source: dataTopic
        strict: true
        attributes:
            - data: dict
            - test: str
    end

    Entity weatherData
        source: WeatherEnpoint
        attributes:
            - current: dict
            - daily: dict
            - hourly: dict
    end

    Component StaticTextCrazy
        type: Text 
            content: "I am a crazy text." 
            weight:900 
            size:25
    end

    Component StaticTextSimple
        type: Text 
            content: "I am a simple text." 
            weight:500 
            size:20
    end

    Component BrokerPublisher
        type: Publish
            broker: DataBroker
    end

    Component BrokerJson
        entity: DataFromBroker
        type: JsonViewer
    end

    Component LiveText
        entity: DataFromBroker
        type: Text
            content: this.data.temp
    end

    Component WeatherText
        entity: weatherData
        // interval: 2000
        type: Text
            content: this.daily.temperature_2m_max[0]
    end
    // ============ Screens ================= //
    Screen Home
        title: "Home"
        url: "/"

        row
            col
                // TEST NUMBER 1
                if (30 < DataFromBroker.data.temp and weatherData.data.hum <80) or (DataFromBroker.data.online == "yes" and DataFromBroker.data.lastIn < DataFromBroker.data.lastInMax)
                    use StaticTextCrazy
                else if DataFromBroker.data.temp < 10
                    use LiveText

                if 0 < DataFromBroker.data.temp
                    use StaticTextSimple 
            endcol
            col
                use BrokerJson
            endcol

        endrow
        row
            col
                use BrokerPublisher
            endcol
            col
                use WeatherText
            endcol

        endrow
    end
end