import accessors
import components
import entity


Condition:
    'if' expr=Expression
    'from' 'entity' entity=[Entity]
    'use' component+=[Component][',']
    (
      'else'
      (   
          nested=Condition
      |   
          'use' componentElse+=[Component][',']
      )
    )?
    ('every' interval=INT)?
;


ElseClause:
    'else'
      (  // either an “else if”
         'if' expr=Expression
      )?
    'use' componentElse+=[Component][',']
;

Expression:
    OrExpr
;

OrExpr:
    left=AndExpr ( 'or' right=OrExpr )?
;

AndExpr:
    left=PrimaryExpr ( 'and' right=AndExpr )?
;

PrimaryExpr:
      comp=ComparisonExpr
    | '(' expr=Expression ')'    // parentheses to group
;

ComparisonExpr:
    left=LiveOrStaticValue op=ComparisonOperator right=LiveOrStaticValue
;

ComparisonOperator:
    '==' | '!=' | '<' | '>' | '<=' | '>='
;

Value:
    INT | FLOAT | STRING | BOOL
;

LiveOrStaticValue:
    Value | NestedAccessPath
;

HalfExpression:
    op=ComparisonOperator right=Value
;