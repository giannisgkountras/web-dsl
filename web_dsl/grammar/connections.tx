import types
import auth

MessageBroker:
    AMQPBroker | MQTTBroker | RedisBroker
;

MQTTBroker:
    'Broker<MQTT>' name=ID
    (
        ('host:' host=STRING)
        ('port:' port=INT)
        ('transport:' transport=STRING)?
        ('auth:' auth=Authentication)?
    )#
    'end'
;

AMQPBroker:
    'Broker<AMQP>' name=ID
    (
        ('host:' host=STRING)
        ('port:' port=INT)
        ('vhost:' vhost=STRING)?
        ('auth:' auth=Authentication)?
    )#
    'end'
;

RedisBroker:
    'Broker<Redis>' name=ID
    (
        ('host:' host=STRING)
        ('port:' port=INT)
        ('db:' db=INT)?
        ('auth:' auth=Authentication)?
    )#
    'end'
;

Websocket:
    'Websocket' name=ID
    (
        ('host:' host=STRING)
        ('port:' port=INT)
        ('auth:' auth=Authentication)?
    )#
    'end'
;

API:
    'API' name=ID
    (
        ('host:' host=STRING)
        ('port:' port=INT)
        ('auth:' auth=Authentication)?
    )#
    'end'
;

RESTApi:
    'RESTApi' name=ID
    (
        ('host:' host=STRING)
        ('port:' port=INT)?
        ('headers:' header=Dict)?
        ('auth:' auth=[AuthApiKey])?
    )#
    'end'
;

Database: MySQL | MongoDB
;

MySQL:
    'Database<MySQL>' name=ID
    (
        ('host:' host=STRING)
        ('port:' port=INT)
        ('auth:' auth=AuthPlain)
        ('database:' database=STRING)
    )#
    'end'
;

MongoDB:
    'Database<MongoDB>' name=ID
    (
        ('host:' host=STRING)
        ('port:' port=INT)
        ('auth:' auth=AuthPlain)
        ('database:' database=STRING)
    )#
    'end'
;
