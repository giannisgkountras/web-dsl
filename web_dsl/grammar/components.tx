import entity

// Define a generic Component that can be one of several types
BasicComponent:
    Button | Form | Image | h1 | h2 | p | Notification | LineChart | Logs
;

// A live component that connects to a topic on a broker
LiveComponent:
    'LiveComponent'
    'topic:' topic=STRING       
    'dataName:' dataName=STRING
    'content:' definition=BasicComponent
    ('entity:' ref=[Entity|ID])?   // Optional reference to an entity
;


Component:
    BasicComponent | LiveComponent
;

ReusableComponentDefinition:
    'DefineComponent' name=ID 'as' definition = Component
;

ReusableComponent:
    'useComponent' ref=[ReusableComponentDefinition|ID]
;

// A button with a name and text label
Button:
    'Button' (name=ID)? content=STRING
;

// A text field with a name and placeholder text
Input:
    'Input' name=ID 
    'type:' type=STRING
    'placeholder:' placeholder=STRING
    'required:' required=BOOL


;

// A label with a name and content
Label:
    'Label' name=ID 'content:' content=STRING
;

// A form component with an action, method, and nested structural elements
Form:
    'Form' name=ID
    elements*=FormElement
    'endform'
;

// A form element that can be either an input or a label
FormElement:
    Input | Label
;


// An image with a name and source URL
Image:
    'Image' name=ID 'source:' content=STRING
;

// A header with content
h1:
    'h1' (name=ID)? content=STRING
;

// A smaller header with content
h2:
    'h2' (name=ID)? content=STRING
;

// A text with content
p:
    'p' (name=ID)? content=STRING
;

// A notification component
Notification:
    'Notification' name=ID
    ('type:' type=NotificationType)?
;

NotificationType:
    'info' | 'warning' | 'error' | 'success'
;

// A line chart compoenent
LineChart:
    'LineChart' (name=ID)? 
    'xLabel:' xLabel=STRING
    'yLabel:' yLabel=STRING
    'xDataKey:' xDataKey=STRING
    'yDataKey:' yDataKey=STRING
;

// A table of live Logs
Logs:
    'Logs' (name=ID)?
    '{' columns+=STRING[','] '}'
;